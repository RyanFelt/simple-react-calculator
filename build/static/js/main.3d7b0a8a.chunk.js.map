{"version":3,"sources":["components/Buttons.js","components/helpers.js","components/Calculator.js","App.js","serviceWorker.js","index.js"],"names":["Buttons","props","react_default","a","createElement","Fragment","className","onClick","onClickItem","v","t","activeButton","math","+","x","y","-","*","/","operator","parseFloat","firstNum","secondNum","Calculator","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","input","value","state","activeOperator","includes","newDisplay","setState","display","split","concat","percent","toString","res","Buttons_Buttons","Component","App","Calculator_Calculator","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3d7b0a8a.chunk.js","sourcesContent":["import React from 'react';\nimport '../css/Buttons.css';\n\nexport const Buttons = props => {\n  return (\n    <>\n      <div className=\"row\">\n        <div\n          className=\"button\"\n          onClick={() => props.onClickItem({ v: 'CLEAR', t: 'OPERATOR' })}\n        >\n          C\n        </div>\n        <div\n          className=\"button\"\n          onClick={() => props.onClickItem({ v: 'INVERSE', t: 'OPERATOR' })}\n        >\n          +/-\n        </div>\n        <div\n          className=\"button\"\n          onClick={() => props.onClickItem({ v: 'PERCENTAGE', t: 'OPERATOR' })}\n        >\n          %\n        </div>\n        <div\n          className={props.activeButton === '/' ? 'active-button' : 'button'}\n          onClick={() => props.onClickItem({ v: '/', t: 'OPERATOR' })}\n        >\n          /\n        </div>\n      </div>\n      <div className=\"row\">\n        <div\n          className=\"button\"\n          onClick={() => props.onClickItem({ v: '1', t: 'INPUT' })}\n        >\n          1\n        </div>\n        <div\n          className=\"button\"\n          onClick={() => props.onClickItem({ v: '2', t: 'INPUT' })}\n        >\n          2\n        </div>\n        <div\n          className=\"button\"\n          onClick={() => props.onClickItem({ v: '3', t: 'INPUT' })}\n        >\n          3\n        </div>\n        <div\n          className={props.activeButton === '*' ? 'active-button' : 'button'}\n          onClick={() => props.onClickItem({ v: '*', t: 'OPERATOR' })}\n        >\n          *\n        </div>\n      </div>\n\n      <div className=\"row\">\n        <div\n          className=\"button\"\n          onClick={() => props.onClickItem({ v: '4', t: 'INPUT' })}\n        >\n          4\n        </div>\n        <div\n          className=\"button\"\n          onClick={() => props.onClickItem({ v: '5', t: 'INPUT' })}\n        >\n          5\n        </div>\n        <div\n          className=\"button\"\n          onClick={() => props.onClickItem({ v: '6', t: 'INPUT' })}\n        >\n          6\n        </div>\n        <div\n          className={props.activeButton === '-' ? 'active-button' : 'button'}\n          onClick={() => props.onClickItem({ v: '-', t: 'OPERATOR' })}\n        >\n          -\n        </div>\n      </div>\n      <div className=\"row\">\n        <div\n          className=\"button\"\n          onClick={() => props.onClickItem({ v: '7', t: 'INPUT' })}\n        >\n          7\n        </div>\n        <div\n          className=\"button\"\n          onClick={() => props.onClickItem({ v: '8', t: 'INPUT' })}\n        >\n          8\n        </div>\n        <div\n          className=\"button\"\n          onClick={() => props.onClickItem({ v: '9', t: 'INPUT' })}\n        >\n          9\n        </div>\n        <div\n          className={props.activeButton === '+' ? 'active-button' : 'button'}\n          onClick={() => props.onClickItem({ v: '+', t: 'OPERATOR' })}\n        >\n          +\n        </div>\n      </div>\n      <div className=\"row\">\n        <div\n          className=\"button-0\"\n          onClick={() => props.onClickItem({ v: '0', t: 'INPUT' })}\n        >\n          0\n        </div>\n        <div\n          className=\"button\"\n          onClick={() => props.onClickItem({ v: '.', t: 'INPUT' })}\n        >\n          .\n        </div>\n        <div\n          className=\"button\"\n          onClick={() => props.onClickItem({ v: 'EQUAL', t: 'OPERATOR' })}\n        >\n          =\n        </div>\n      </div>\n    </>\n  );\n};\n","export const math = props => {\n  const mathObj = {\n    '+': (x, y) => {\n      return x + y;\n    },\n    '-': (x, y) => {\n      return x - y;\n    },\n    '*': (x, y) => {\n      return x * y;\n    },\n    '/': (x, y) => {\n      return x / y;\n    }\n  };\n  return mathObj[props.operator](\n    parseFloat(props.firstNum),\n    parseFloat(props.secondNum)\n  );\n};\n","import React, { Component } from 'react';\nimport { Buttons } from './Buttons';\nimport '../css/Calculator.css';\nimport { math } from './helpers';\nexport default class Calculator extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      display: '',\n      firstNum: '',\n      secondNum: '',\n      operator: false,\n      activeOperator: false,\n      activeButton: ''\n    };\n  }\n\n  input = value => {\n    if (this.state.activeOperator) {\n      if (value === '.' && this.state.secondNum.includes('.')) return;\n      let newDisplay = this.state.secondNum + value;\n      if (newDisplay === '.') newDisplay = '0.';\n      this.setState({\n        secondNum: newDisplay,\n        display: newDisplay\n      });\n    } else {\n      if (value === '.' && this.state.display.includes('.')) return;\n      let newDisplay = this.state.display + value;\n      if (newDisplay === '.') newDisplay = '0.';\n\n      this.setState({\n        display: newDisplay,\n        firstNum: newDisplay\n      });\n    }\n  };\n\n  operator = props => {\n    if (props.v === 'CLEAR') {\n      this.setState({\n        display: '',\n        firstNum: '',\n        secondNum: '',\n        operator: false,\n        activeOperator: false,\n        activeButton: ''\n      });\n    } else if (props.v === 'INVERSE') {\n      if (!this.state.display.includes('-') && this.state.display !== '')\n        this.setState({\n          display: `-${this.state.display}`\n        });\n      else if (this.state.display !== '')\n        this.setState({\n          display: this.state.display.split('-')[1]\n        });\n    } else if (props.v === 'PERCENTAGE') {\n      const percent = this.state.display / 100;\n      this.setState({ display: percent.toString() });\n    } else if (props.v === 'EQUAL') {\n      if (!this.state.operator) return;\n      const res = math({\n        operator: this.state.operator,\n        firstNum: this.state.firstNum,\n        secondNum: this.state.secondNum\n      }).toString();\n\n      this.setState({\n        display: res,\n        firstNum: res,\n        activeOperator: true,\n        activeButton: ''\n      });\n    }\n    // +, -, /, *\n    else {\n      this.setState({\n        operator: props.v,\n        activeOperator: true,\n        firstNum: this.state.display,\n        secondNum: '',\n        activeButton: props.v\n      });\n    }\n  };\n\n  onClickItem = props => {\n    if (props.t === 'INPUT') this.input(props.v);\n    else if (props.t === 'OPERATOR') this.operator(props);\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <div className=\"calculator\">\n            <div className=\"input\">{this.state.display}</div>\n            <Buttons\n              activeButton={this.state.activeButton}\n              onClickItem={this.onClickItem}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Calculator from './components/Calculator';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Calculator />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}